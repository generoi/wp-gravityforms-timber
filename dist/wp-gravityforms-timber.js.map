{"version":3,"sources":["webpack:///wp-gravityforms-timber.js","webpack:///webpack/bootstrap f07b51ab53ab706f02ca","webpack:///external \"jQuery\"","webpack:///./js/wp-gravityforms-timber.js","webpack:///./js/ajax-form.js","webpack:///./node_modules/es6-object-assign/index.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","jQuery","__webpack_exports__","value","$","__WEBPACK_IMPORTED_MODULE_0__ajax_form__","__WEBPACK_IMPORTED_MODULE_1_es6_object_assign__","a","polyfill","document","on","each","el","ajaxForm","window","WP_Gravityforms_Timber","AjaxForm","form","options","this","assign","recaptcha","messageSelector","confirmationSelector","elementSelector","honeypot","honeypotMinDuration","showTopErrorMessage","language","l10n","data","id","replace","$context","$submit","find","$messageContainer","setStartTime","Date","now","loadRecaptcha","submit","bind","timestamp","startTime","this$1","formSubmitted","prop","addClass","const","formData","FormData","validateHoneypot","Error","delete","ajax","url","action","method","toUpperCase","dataType","enctype","processData","contentType","beforeSend","xhr","nonce","setRequestHeader","done","fail","jqXHR","textStatus","errorThrown","console","error","removeProp","removeClass","addInlineErrorMessages","show","html","getErrorMessage","scrollTo","first","grecaptcha","reset","is_valid","dataAttributes","generoAnalytics","category","Gevent","label","applyConfirmation","confirmation","formConfirmation","log","type","location","redirect","$confirmation","hide","target","offset","top","left","duration","remove","responseJSON","params","Array","isArray","forEach","field","setInputAsInvalid","message","keys","validation_messages","messages","$field","$label","$element","closest","is","length","append","after","code","response","error_recaptcha","error_form_param","error_form_general","let","cache","firstSource","undefined","TypeError","to","arguments","nextSource","keysArray","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","writable"],"mappings":"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","file":"wp-gravityforms-timber.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 1);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nmodule.exports = jQuery;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* WEBPACK VAR INJECTION */(function($) {/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ajax_form__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_es6_object_assign__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_es6_object_assign___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_es6_object_assign__);\n\n\n\n__WEBPACK_IMPORTED_MODULE_1_es6_object_assign___default.a.polyfill();\n\n$(document).on('ready', function () {\n  $('form[data-ajax]').each(function (i, el) {\n    if (!el.ajaxForm) {\n      el.ajaxForm = new __WEBPACK_IMPORTED_MODULE_0__ajax_form__[\"a\" /* default */](el);\n    }\n  });\n});\n\n// Expose so other forms can use it.\nwindow.WP_Gravityforms_Timber.AjaxForm = __WEBPACK_IMPORTED_MODULE_0__ajax_form__[\"a\" /* default */];\n\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(0)))\n\n/***/ }),\n/* 2 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function($) {var AjaxForm = function AjaxForm(form, options) {\n  if ( options === void 0 ) options = {};\n\n  this.options = Object.assign(\n    {\n      recaptcha: false,\n      messageSelector: '.form__messages',\n      confirmationSelector: '.form__confirmation',\n      elementSelector: '.form__element',\n      honeypot: 'form-question-answer',\n      honeypotMinDuration: 1000,\n      showTopErrorMessage: true,\n      language: 'en',\n      l10n: {},\n    },\n    // options set through wp_localize_script.\n    window.WP_Gravityforms_Timber,\n    // options passed directly to the constructor.\n    options,\n    // options set through data-attributes.\n    $(this.form).data()\n  );\n\n  this.form = form;\n  this.id = this.form.id.replace('form--', '');\n  this.$context = $(this.form);\n  this.$submit = this.$context.find('input[type=\"submit\"]');\n  this.$messageContainer = this.$context.find(this.options.messageSelector);\n\n  this.setStartTime(Date.now());\n  // Load reCaptcha script.\n  if (this.options.recaptcha) {\n    this.loadRecaptcha();\n  }\n  // Submit handler\n  this.$context.on('submit', this.submit.bind(this));\n};\n\nAjaxForm.prototype.setStartTime = function setStartTime (timestamp) {\n  this.startTime = timestamp;\n};\n\n/**\n * Trigger the form submit.\n */\nAjaxForm.prototype.submit = function submit () {\n    var this$1 = this;\n\n  if (this.formSubmitted) {\n    return false;\n  }\n  this.formSubmitted = true;\n\n  this.$submit.prop('disabled', 'disabled').addClass('spinner');\n\n  var formData = new FormData(this.form);\n  if (!this.validateHoneypot(formData.get(this.options.honeypot))) {\n    throw new Error('Bot detection');\n  } else {\n    formData.delete(this.options.honeypot);\n  }\n\n  $.ajax({\n    url: this.form.action,\n    method: (this.form.method || 'get').toUpperCase(),\n    data: formData,\n    dataType: 'json',\n    enctype: this.form.enctype,\n    processData: false,\n    contentType: false,\n    beforeSend: function (xhr) {\n      if (this$1.options.nonce) {\n        xhr.setRequestHeader('X-WP-Nonce', this$1.options.nonce);\n      }\n    },\n  })\n    .done(this.done.bind(this))\n    .fail(this.fail.bind(this));\n\n  return false;\n};\n\n/**\n * Failure handler.\n */\nAjaxForm.prototype.fail = function fail (jqXHR, textStatus, errorThrown) {\n  console.error((textStatus + \": \" + errorThrown));\n\n  this.$submit.removeProp('disabled').removeClass('spinner');\n  this.formSubmitted = false;\n\n  this.addInlineErrorMessages(jqXHR);\n\n  if (this.options.showTopErrorMessage) {\n    this.$messageContainer\n      .show()\n      .removeClass('is-hidden')\n      .html((\"<p>\" + (this.getErrorMessage(jqXHR)) + \"</p>\"));\n\n    this.scrollTo(this.$messageContainer);\n  } else {\n    this.scrollTo(this.$context.find('.is-invalid-label').first());\n  }\n\n  // Re-init reCaptcha.\n  if (window.grecaptcha) {\n    window.grecaptcha.reset();\n  }\n};\n\n/**\n * Success handler.\n */\nAjaxForm.prototype.done = function done (data, textStatus, jqXHR) {\n  // Gravityform returns a 200 status code\n  if (data.hasOwnProperty('is_valid') && !data.is_valid) {\n    return this.fail(jqXHR, textStatus, 'ValidationFailure');\n  }\n  var dataAttributes = this.$context.data();\n  var hasAnalytics =\n    dataAttributes.generoAnalytics && dataAttributes.category;\n\n  if (hasAnalytics && window.Gevent) {\n    window.Gevent(\n      dataAttributes.category,\n      'Confirmation',\n      dataAttributes.label,\n      this.applyConfirmation.bind(this)\n    );\n  } else {\n    this.applyConfirmation();\n  }\n};\n\n/**\n * Apply the confirmation action\n */\nAjaxForm.prototype.applyConfirmation = function applyConfirmation () {\n  var confirmation =\n    window.formConfirmation && window.formConfirmation[this.form.id];\n  console.log(confirmation);\n\n  // If a global JS variable defines the confirmation\n  if (confirmation && confirmation.type) {\n    switch (confirmation.type) {\n      case 'page':\n      case 'redirect':\n        window.location = confirmation.redirect;\n        break;\n      case 'message':\n        this.$context.html(confirmation.html);\n        this.scrollTo(this.$context);\n        break;\n    }\n  } else {\n    // If there's hidden confirmation message in the form.\n    var $confirmation = this.$context\n      .find(this.confirmationSelector)\n      .show()\n      .removeClass('is-hidden');\n\n    this.$context.hide();\n    this.scrollTo($confirmation);\n  }\n};\n\nAjaxForm.prototype.scrollTo = function scrollTo (target) {\n  if ($.scrollTo) {\n    $.scrollTo(target, {\n      offset: { top: -150, left: 0 },\n      duration: 200,\n    });\n  }\n};\n\n/**\n * Display inline error messages next to form elements.\n */\nAjaxForm.prototype.addInlineErrorMessages = function addInlineErrorMessages (jqXHR) {\n    var this$1 = this;\n\n  // Clean up old error classes and messages.\n  this.$context\n    .find('.is-invalid-label, .is-invalid-input')\n    .removeClass('is-invalid-label')\n    .removeClass('is-invalid-input');\n  this.$context.find('.form-error').remove();\n\n  if (jqXHR.responseJSON && jqXHR.responseJSON.data) {\n    var data = jqXHR.responseJSON.data;\n    if (data.params) {\n      // List of invalid fields (required).\n      if (Array.isArray(data.params)) {\n        data.params.forEach(function (field) {\n          this$1.setInputAsInvalid(field, data.message);\n        });\n      } else {\n        // Object with invalid fields and their error message (invalid value).\n        Object.keys(data.params).forEach(function (field) {\n          this$1.setInputAsInvalid(field, data.params[field]);\n        });\n      }\n    }\n  }\n\n  // Gravityform structure\n  if (jqXHR.responseJSON && jqXHR.responseJSON.validation_messages) {\n    var messages = jqXHR.responseJSON.validation_messages;\n    Object.keys(messages).forEach(function (field) {\n      this$1.setInputAsInvalid((\"input_\" + field), messages[field]);\n    });\n  }\n};\n\n/**\n * Mark an input and it's label as invalid.\n */\nAjaxForm.prototype.setInputAsInvalid = function setInputAsInvalid (field, message) {\n  var $field = this.$context.find((\"[name=\\\"\" + field + \"\\\"]\"));\n  var $label = this.$context.find((\"label[for=\\\"\" + field + \"\\\"]\"));\n  var $element = $label.closest(this.options.elementSelector);\n\n  // Find all child labels and input fields, in some cases such as checkbox\n  // lists with Gravityforms the field name doesn't match the labels.\n  $element.find('label').addClass('is-invalid-label');\n  $element.find('input').addClass('is-invalid-input');\n  // Make sure the corretly referenced elements are marked as invalid.\n  // Primarily for custom forms.\n  $field.addClass('is-invalid-input');\n  $label.addClass('is-invalid-label');\n\n  if (message) {\n    // Remove old inline error messages and add the current one.\n    var html = \"<span class=\\\"form-error is-visible\\\">\" + message + \"</span>\";\n\n    if (\n      $field.is('[type=radio]') ||\n      $field.is('[type=checkbox]') ||\n      !$field.length\n    ) {\n      // If it's a checkbox or radio input, it's possible that the label\n      // is positioned after the input. Alternatively in the case of\n      // Gravityform checkbox lists, the field name doesn't match the labels.\n      $element.append(html);\n    } else {\n      // As long as it's not a multiple list checkbox/radio, output directly\n      // after the field\n      $field.after(html);\n    }\n  }\n};\n\n/**\n * Return a translated error message to inform the user what went wrong.\n * @see src/custom/rest-experiences.php\n */\nAjaxForm.prototype.getErrorMessage = function getErrorMessage (jqXHR) {\n  // REST API validation messages.\n  if (jqXHR.responseJSON && jqXHR.responseJSON.code) {\n    var response = jqXHR.responseJSON;\n    var params = response.data.params;\n\n    switch (response.code) {\n      case 'rest_invalid_param':\n      case 'rest_missing_callback_param':\n        if (params.hasOwnProperty('g-recaptcha-response')) {\n          return this.options.l10n.error_recaptcha;\n        }\n        return this.options.l10n.error_form_param;\n    }\n  }\n  return this.options.l10n.error_form_general;\n};\n\n/**\n * Validate the honeypot if it exists.\n */\nAjaxForm.prototype.validateHoneypot = function validateHoneypot (value) {\n  if (value) {\n    return false;\n  }\n  if (this.startTime + this.options.honeypotMinDuration > Date.now()) {\n    return false;\n  }\n  return true;\n};\n\n/**\n * Load reCaptcha in the users language.\n */\nAjaxForm.prototype.loadRecaptcha = function loadRecaptcha () {\n  var language = this.options.language;\n  language = language.replace(/^([a-z]{2})-([a-z]{2})/, '$2');\n\n  $.ajax({\n    url: (\"https://www.google.com/recaptcha/api.js?hl=\" + language),\n    cache: true,\n    dataType: 'script',\n  });\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (AjaxForm);\n\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(0)))\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * Code refactored from Mozilla Developer Network:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n */\n\n\n\nfunction assign(target, firstSource) {\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert first argument to object');\n  }\n\n  var to = Object(target);\n  for (var i = 1; i < arguments.length; i++) {\n    var nextSource = arguments[i];\n    if (nextSource === undefined || nextSource === null) {\n      continue;\n    }\n\n    var keysArray = Object.keys(Object(nextSource));\n    for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex++) {\n      var nextKey = keysArray[nextIndex];\n      var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n      if (desc !== undefined && desc.enumerable) {\n        to[nextKey] = nextSource[nextKey];\n      }\n    }\n  }\n  return to;\n}\n\nfunction polyfill() {\n  if (!Object.assign) {\n    Object.defineProperty(Object, 'assign', {\n      enumerable: false,\n      configurable: true,\n      writable: true,\n      value: assign\n    });\n  }\n}\n\nmodule.exports = {\n  assign: assign,\n  polyfill: polyfill\n};\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// wp-gravityforms-timber.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap f07b51ab53ab706f02ca","module.exports = jQuery;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"jQuery\"\n// module id = 0\n// module chunks = 0","import AjaxForm from './ajax-form';\nimport objectAssign from 'es6-object-assign';\n\nobjectAssign.polyfill();\n\n$(document).on('ready', () => {\n  $('form[data-ajax]').each((i, el) => {\n    if (!el.ajaxForm) {\n      el.ajaxForm = new AjaxForm(el);\n    }\n  });\n});\n\n// Expose so other forms can use it.\nwindow.WP_Gravityforms_Timber.AjaxForm = AjaxForm;\n\n\n\n// WEBPACK FOOTER //\n// ./js/wp-gravityforms-timber.js","class AjaxForm {\n  constructor(form, options = {}) {\n    this.options = Object.assign(\n      {\n        recaptcha: false,\n        messageSelector: '.form__messages',\n        confirmationSelector: '.form__confirmation',\n        elementSelector: '.form__element',\n        honeypot: 'form-question-answer',\n        honeypotMinDuration: 1000,\n        showTopErrorMessage: true,\n        language: 'en',\n        l10n: {},\n      },\n      // options set through wp_localize_script.\n      window.WP_Gravityforms_Timber,\n      // options passed directly to the constructor.\n      options,\n      // options set through data-attributes.\n      $(this.form).data()\n    );\n\n    this.form = form;\n    this.id = this.form.id.replace('form--', '');\n    this.$context = $(this.form);\n    this.$submit = this.$context.find('input[type=\"submit\"]');\n    this.$messageContainer = this.$context.find(this.options.messageSelector);\n\n    this.setStartTime(Date.now());\n    // Load reCaptcha script.\n    if (this.options.recaptcha) {\n      this.loadRecaptcha();\n    }\n    // Submit handler\n    this.$context.on('submit', this.submit.bind(this));\n  }\n\n  setStartTime(timestamp) {\n    this.startTime = timestamp;\n  }\n\n  /**\n   * Trigger the form submit.\n   */\n  submit() {\n    if (this.formSubmitted) {\n      return false;\n    }\n    this.formSubmitted = true;\n\n    this.$submit.prop('disabled', 'disabled').addClass('spinner');\n\n    const formData = new FormData(this.form);\n    if (!this.validateHoneypot(formData.get(this.options.honeypot))) {\n      throw new Error('Bot detection');\n    } else {\n      formData.delete(this.options.honeypot);\n    }\n\n    $.ajax({\n      url: this.form.action,\n      method: (this.form.method || 'get').toUpperCase(),\n      data: formData,\n      dataType: 'json',\n      enctype: this.form.enctype,\n      processData: false,\n      contentType: false,\n      beforeSend: xhr => {\n        if (this.options.nonce) {\n          xhr.setRequestHeader('X-WP-Nonce', this.options.nonce);\n        }\n      },\n    })\n      .done(this.done.bind(this))\n      .fail(this.fail.bind(this));\n\n    return false;\n  }\n\n  /**\n   * Failure handler.\n   */\n  fail(jqXHR, textStatus, errorThrown) {\n    console.error(`${textStatus}: ${errorThrown}`);\n\n    this.$submit.removeProp('disabled').removeClass('spinner');\n    this.formSubmitted = false;\n\n    this.addInlineErrorMessages(jqXHR);\n\n    if (this.options.showTopErrorMessage) {\n      this.$messageContainer\n        .show()\n        .removeClass('is-hidden')\n        .html(`<p>${this.getErrorMessage(jqXHR)}</p>`);\n\n      this.scrollTo(this.$messageContainer);\n    } else {\n      this.scrollTo(this.$context.find('.is-invalid-label').first());\n    }\n\n    // Re-init reCaptcha.\n    if (window.grecaptcha) {\n      window.grecaptcha.reset();\n    }\n  }\n\n  /**\n   * Success handler.\n   */\n  done(data, textStatus, jqXHR) {\n    // Gravityform returns a 200 status code\n    if (data.hasOwnProperty('is_valid') && !data.is_valid) {\n      return this.fail(jqXHR, textStatus, 'ValidationFailure');\n    }\n    const dataAttributes = this.$context.data();\n    const hasAnalytics =\n      dataAttributes.generoAnalytics && dataAttributes.category;\n\n    if (hasAnalytics && window.Gevent) {\n      window.Gevent(\n        dataAttributes.category,\n        'Confirmation',\n        dataAttributes.label,\n        this.applyConfirmation.bind(this)\n      );\n    } else {\n      this.applyConfirmation();\n    }\n  }\n\n  /**\n   * Apply the confirmation action\n   */\n  applyConfirmation() {\n    const confirmation =\n      window.formConfirmation && window.formConfirmation[this.form.id];\n    console.log(confirmation);\n\n    // If a global JS variable defines the confirmation\n    if (confirmation && confirmation.type) {\n      switch (confirmation.type) {\n        case 'page':\n        case 'redirect':\n          window.location = confirmation.redirect;\n          break;\n        case 'message':\n          this.$context.html(confirmation.html);\n          this.scrollTo(this.$context);\n          break;\n      }\n    } else {\n      // If there's hidden confirmation message in the form.\n      const $confirmation = this.$context\n        .find(this.confirmationSelector)\n        .show()\n        .removeClass('is-hidden');\n\n      this.$context.hide();\n      this.scrollTo($confirmation);\n    }\n  }\n\n  scrollTo(target) {\n    if ($.scrollTo) {\n      $.scrollTo(target, {\n        offset: { top: -150, left: 0 },\n        duration: 200,\n      });\n    }\n  }\n\n  /**\n   * Display inline error messages next to form elements.\n   */\n  addInlineErrorMessages(jqXHR) {\n    // Clean up old error classes and messages.\n    this.$context\n      .find('.is-invalid-label, .is-invalid-input')\n      .removeClass('is-invalid-label')\n      .removeClass('is-invalid-input');\n    this.$context.find('.form-error').remove();\n\n    if (jqXHR.responseJSON && jqXHR.responseJSON.data) {\n      const data = jqXHR.responseJSON.data;\n      if (data.params) {\n        // List of invalid fields (required).\n        if (Array.isArray(data.params)) {\n          data.params.forEach(field => {\n            this.setInputAsInvalid(field, data.message);\n          });\n        } else {\n          // Object with invalid fields and their error message (invalid value).\n          Object.keys(data.params).forEach(field => {\n            this.setInputAsInvalid(field, data.params[field]);\n          });\n        }\n      }\n    }\n\n    // Gravityform structure\n    if (jqXHR.responseJSON && jqXHR.responseJSON.validation_messages) {\n      const messages = jqXHR.responseJSON.validation_messages;\n      Object.keys(messages).forEach(field => {\n        this.setInputAsInvalid(`input_${field}`, messages[field]);\n      });\n    }\n  }\n\n  /**\n   * Mark an input and it's label as invalid.\n   */\n  setInputAsInvalid(field, message) {\n    const $field = this.$context.find(`[name=\"${field}\"]`);\n    const $label = this.$context.find(`label[for=\"${field}\"]`);\n    const $element = $label.closest(this.options.elementSelector);\n\n    // Find all child labels and input fields, in some cases such as checkbox\n    // lists with Gravityforms the field name doesn't match the labels.\n    $element.find('label').addClass('is-invalid-label');\n    $element.find('input').addClass('is-invalid-input');\n    // Make sure the corretly referenced elements are marked as invalid.\n    // Primarily for custom forms.\n    $field.addClass('is-invalid-input');\n    $label.addClass('is-invalid-label');\n\n    if (message) {\n      // Remove old inline error messages and add the current one.\n      const html = `<span class=\"form-error is-visible\">${message}</span>`;\n\n      if (\n        $field.is('[type=radio]') ||\n        $field.is('[type=checkbox]') ||\n        !$field.length\n      ) {\n        // If it's a checkbox or radio input, it's possible that the label\n        // is positioned after the input. Alternatively in the case of\n        // Gravityform checkbox lists, the field name doesn't match the labels.\n        $element.append(html);\n      } else {\n        // As long as it's not a multiple list checkbox/radio, output directly\n        // after the field\n        $field.after(html);\n      }\n    }\n  }\n\n  /**\n   * Return a translated error message to inform the user what went wrong.\n   * @see src/custom/rest-experiences.php\n   */\n  getErrorMessage(jqXHR) {\n    // REST API validation messages.\n    if (jqXHR.responseJSON && jqXHR.responseJSON.code) {\n      const response = jqXHR.responseJSON;\n      const params = response.data.params;\n\n      switch (response.code) {\n        case 'rest_invalid_param':\n        case 'rest_missing_callback_param':\n          if (params.hasOwnProperty('g-recaptcha-response')) {\n            return this.options.l10n.error_recaptcha;\n          }\n          return this.options.l10n.error_form_param;\n      }\n    }\n    return this.options.l10n.error_form_general;\n  }\n\n  /**\n   * Validate the honeypot if it exists.\n   */\n  validateHoneypot(value) {\n    if (value) {\n      return false;\n    }\n    if (this.startTime + this.options.honeypotMinDuration > Date.now()) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Load reCaptcha in the users language.\n   */\n  loadRecaptcha() {\n    let language = this.options.language;\n    language = language.replace(/^([a-z]{2})-([a-z]{2})/, '$2');\n\n    $.ajax({\n      url: `https://www.google.com/recaptcha/api.js?hl=${language}`,\n      cache: true,\n      dataType: 'script',\n    });\n  }\n}\n\nexport default AjaxForm;\n\n\n\n// WEBPACK FOOTER //\n// ./js/ajax-form.js","/**\n * Code refactored from Mozilla Developer Network:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n */\n\n'use strict';\n\nfunction assign(target, firstSource) {\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert first argument to object');\n  }\n\n  var to = Object(target);\n  for (var i = 1; i < arguments.length; i++) {\n    var nextSource = arguments[i];\n    if (nextSource === undefined || nextSource === null) {\n      continue;\n    }\n\n    var keysArray = Object.keys(Object(nextSource));\n    for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex++) {\n      var nextKey = keysArray[nextIndex];\n      var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n      if (desc !== undefined && desc.enumerable) {\n        to[nextKey] = nextSource[nextKey];\n      }\n    }\n  }\n  return to;\n}\n\nfunction polyfill() {\n  if (!Object.assign) {\n    Object.defineProperty(Object, 'assign', {\n      enumerable: false,\n      configurable: true,\n      writable: true,\n      value: assign\n    });\n  }\n}\n\nmodule.exports = {\n  assign: assign,\n  polyfill: polyfill\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/es6-object-assign/index.js\n// module id = 3\n// module chunks = 0"],"sourceRoot":""}